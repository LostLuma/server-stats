plugins {
	id 'maven-publish'
	alias libs.plugins.shadow
	alias libs.plugins.quilt.loom
	alias libs.plugins.ploceus
}

apply from: "${rootProject.projectDir}/gradle/common.gradle"

group = project.maven_group
version = generateVersionWithMetadata()

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft

	mappings loom.layered {
		mappings "net.ornithemc:feather:${libs.versions.minecraft.get()}+build.${libs.versions.feather.build.get()}:v2"
		addLayer ploceus.nestedMappings()
	}
	nests "net.ornithemc:nests:${libs.versions.minecraft.get()}+build.${libs.versions.nests.build.get()}"

	modImplementation libs.quilt.loader

	shadow libs.gson
	implementation libs.gson
}

shadowJar {
	configurations = [project.configurations.shadow]
	relocate "com.google", "net.lostluma.server_stats.external"
}

remapJar {
	from('LICENSE') // Include license

	inputFile.set shadowJar.archiveFile
	dependsOn shadowJar
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
